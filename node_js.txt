pwd 현재 작업 디렉토리의 이름을 출력합니다.
ls 작업 디렉토리의 모든 파일과 디렉토리를 나열합니다.
cd 지정한 디렉토리로 전환합니다.
mkdir 작업 디렉터리에 새 디렉터리를 만듭니다.
touch 작업 디렉토리 내부에 새 파일을 생성합니다.

node.js
JavaScript 이름이 이 문자열에 속하지 않더라도
JSON 속성 이름은 큰따옴표(" ") 텍스트여야 합니다.

JSON 데이터 유형은 다음 중 하나여야 합니다.

문자열(이중 입력)
숫자(점 또는 부동 소수점)
객체(이름-값 쌍)
배열(확장되지 않음
부울(참 또는 거짓)
null

JSON = 서버와 html 간 데이터 전송시 사용됨

process.env 속성은 프로세스가 현재 실행 중인 환경에
대한 정보를 저장하고 제어하는 개체입니다.

process.argv 속성은 현재 프로세스가 시작될 때 제공된
명령줄 값의 배열을 포함합니다.
어레이의 첫 번째 요소는 프로세스를 실행한 노드의 절대 경로입니다.
어레이의 두 번째 요소는 실행 중인 파일의 경로입니다.
다음 요소는 프로세스가 시작될 때 제공된 모든 명령줄 인수입니다. 
명령줄 인수는 공백으로 서로 구분됩니다.



os 모듈을 os 변수에 저장하면 다음과 같은 메서드를 호출할 수 있습니다.

os.type() - 컴퓨터의 운영 체제를 반환합니다.
os.arch() - 운영 체제 CPU 아키텍처를 반환합니다.
os.networkInterfaces - IP 및 MAC 주소와 같은 컴퓨터의 네트워크 인터페이스에 대한 정보를 반환합니다.
os.homedir() - 현재 사용자의 홈 디렉토리를 반환합니다.
os.hostname() - 운영 체제의 호스트 이름을 반환합니다.
os.uptime- 시스템 가동 시간을 초 단위로 반환합니다

util
types.isDate() 메서드는 Date 개체를 확인하고 부울 값을 반환하여 다음을 제공합니다.
Ture/False

getUser 메서드는 백엔드 응용 프로그램에서 매우 일반적이며,
대부분 오류 우선 콜백을 지원합니다.

각 이벤트 이미터 인스턴스에는 수신기 콜백 함수를 명명된 이벤트에
할당하는 .on() 메서드가 있습니다.
이벤트의 이름을 문자열로 사용하고, 두 번째 인수로 수신기 콜백 함수를 사용합니다.


각 이벤트 이미터 인스턴스에는 명명된 이벤트가 발생했음을 알리는
.emit() 메서드도 있습니다.
emit() 메서드는 이벤트의 이름을 문자열로 사용하고, 두 번째 인수로는
데이터를 수신기 콜백 함수로 전달합니다.

stdin.on()
노드에서는 프로세스 개체의 stdin.on() 메서드를 사용하여 터미널을 통해
사용자로부터 입력을 받을 수도 있습니다.

오류모듈
노드 환경의 오류 모듈에는 EvalError, SyntaxError, RangeError, ReferenceError, TypeError 및 URIError와 같은
모든 표준 JavaScript 오류와 새 오류 인스턴스를 만들기 위한 JavaScript Error 클래스가 있습니다

버퍼
.alloc() 메서드는 첫 번째 매개 변수로 지정된 크기를 사용하여 새 Buffer 개체를 만듭니다. .alloc()은 다음 세 가지 인수를 허용합니다.

크기: 필수입니다. 버퍼 크기
채우기: 선택 사항. 버퍼를 채울 값. 기본값은 0입니다.
인코딩: 선택 사항. 기본값은 UTF-8입니다.

.toString() 메서드는 Buffer 개체를 사람이 읽을 수 있는 문자열로 변환합니다. 세 가지 선택적 인수를 사용할 수 있습니다.

인코딩: 기본값은 UTF-8입니다.
시작: 버퍼 개체에서 변환을 시작할 바이트 오프셋입니다. 기본값은 0입니다.
End: Buffer 개체에서 변환을 종료할 바이트 오프셋입니다. 기본값은 버퍼 길이입니다. 버퍼의 시작과 끝은 배열의 시작과 끝과 유사하며,
여기서 첫 번째 요소는 0이고 위로 증가합니다.

.concat() 메서드는 어레이에서 전달된 모든 버퍼 개체를 하나의 Buffer 개체에 결합합니다.
.concat()은 버퍼 개체의 크기를 조정할 수 없으므로 유용합니다. 이 메서드에는 두 개의 인수가 허용됩니다.

배열: 필수입니다. 버퍼 개체를 포함하는 배열입니다.
길이: 선택 사항. 연결된 버퍼의 길이를 지정합니다.

 스트리밍 데이터는 한 번에 모든 데이터를 처리할 수 있는 충분한 RAM이 필요하지 않거나 
모든 데이터를 가지고 있어야 처리할 수 있기 때문에 종종 선호됩니다.

setImmediate = 타이머

setImmediate(() => {
    console.log('Hello! My name is Codey.')
});

Message Mixer
Message Mixer Inc.는 다양한 암호를 사용하여 입력 텍스트를 변환하고
암호화된 메시지를 콘솔에 표시하는 메시지 암호화 서비스를 제공합니다.
-"Caesar" = 입력 메시지의 문자를 지정된 양만큼 알파벳 순으로 이동하는 암호입니다.
-"Symbol" =  입력 메시지에서 선택한 문자가 시각적으로 유사한 기호로 대체되는 "암호"입니다.
-"Reverse" = 입력 메시지의 각 단어가 제자리에 반전되는 암호 입니다.
사용방법 = node message-mixer.js ['caesar'|'symbol'|'reverse'] [amount]
